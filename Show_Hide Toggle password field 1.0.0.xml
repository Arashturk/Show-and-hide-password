<?xml version="1.0" encoding="UTF-8"?>
<plugin name="Show/Hide Toggle password field" version_long="10000" version_human="1.0.0" author="Arash.Ranjbar" website="https://arashranjbar.ir" update_check="https://arashranjbar.ir"><hooks><hook type="S" class="\IPS\Theme\class_core_front_global" filename="ShowHide"><![CDATA[//<?php

/* To prevent PHP errors (extending class does not exist) revealing path */
if ( !\defined( '\IPS\SUITE_UNIQUE_KEY' ) )
{
	exit;
}

class hook44 extends _HOOK_CLASS_
{

/* !Hook Data - DO NOT REMOVE */
public static function hookData() {
 return array_merge_recursive( array (
  'loginPopupForm' => 
  array (
    0 => 
    array (
      'selector' => 'div.ipsPad.ipsForm.ipsForm_vertical > ul.ipsList_reset > li.ipsFieldRow.ipsFieldRow_noLabel.ipsFieldRow_fullWidth > input[type=\'password\'][name=\'password\'][autocomplete=\'current-password\']',
      'type' => 'replace',
      'content' => '<input type="password" placeholder="{lang="password"}" name="password" autocomplete="current-password" id="showpass">
<span class="showpass"><i id="toggler"class="fa fa-eye"></i></span>
            <script>
            var password = document.getElementById(\'showpass\');
      var toggler = document.getElementById(\'toggler\');

      showHidePassword = () => {
        if (password.type == \'password\') {
          password.setAttribute(\'type\', \'text\');
          toggler.classList.add(\'fa-eye-slash\');
        } else {
          toggler.classList.remove(\'fa-eye-slash\');
          password.setAttribute(\'type\', \'password\');
        }
      };

      toggler.addEventListener(\'click\', showHidePassword);
         </script>
<style>
html[dir="rtl"]
span.showpass {
  position: absolute;
  display: inline-block;
  cursor: pointer;
  right: 232px;
  top: 115px;
  color: #080be3;
  z-index: 2;
  padding: 12.9px;
  border-radius: 4.2px 0 0 4.2px;
  border-right: 1px solid #b3b5b7c4;
  line-height: 10px;
}
html[dir="ltr"]
span.showpass {
  position: absolute;
  display: inline-block;
  cursor: pointer;
  left: 232px;
  top: 115px;
  color: #080be3;
  z-index: 2;
  padding: 12.9px;
  border-radius: 4.2px 0 0 4.2px;
  border-left: 1px solid #b3b5b7c4;
  line-height: 10px;
}
</style>',
    ),
  ),
), parent::hookData() );
}
/* End Hook Data */


}
]]></hook></hooks><htmlFiles/><cssFiles/><jsFiles/><resourcesFiles/><lang/><versions><version long="10000" human="1.0.0"><![CDATA[//<?php


/* To prevent PHP errors (extending class does not exist) revealing path */
if ( !\defined( '\IPS\SUITE_UNIQUE_KEY' ) )
{
	header( ( isset( $_SERVER['SERVER_PROTOCOL'] ) ? $_SERVER['SERVER_PROTOCOL'] : 'HTTP/1.0' ) . ' 403 Forbidden' );
	exit;
}

/**
 * Install Code
 */
class ips_plugins_setup_install
{
	/**
	 * ...
	 *
	 * @return	array	If returns TRUE, upgrader will proceed to next step. If it returns any other value, it will set this as the value of the 'extra' GET parameter and rerun this step (useful for loops)
	 */
	public function step1()
	{
		

		return TRUE;
	}
	
	// You can create as many additional methods (step2, step3, etc.) as is necessary.
	// Each step will be executed in a new HTTP request
}]]></version></versions></plugin>
